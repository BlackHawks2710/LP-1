Step 1: Create the CUSTOMER Collection
Use the following code to create the collection and add some sample documents:

db.CUSTOMER.insertMany([
  {
    Cust_No: 1001,
    First_Name: "John",
    Last_Name: "Doe",
    Address: "123 Main St",
    City: "Bangalore",
    State: "KARNATAKA",
    Pincode: 560001,
    B_Date: ISODate("1990-01-15"),
    Status: "Married"
  },
  {
    Cust_No: 1002,
    First_Name: "Jane",
    Last_Name: "Smith",
    Address: "456 Oak Ave",
    City: "Mysore",
    State: "KARNATAKA",
    Pincode: 570001,
    B_Date: ISODate("1985-03-22"),
    Status: "Unmarried"
  },
  {
    Cust_No: 1003,
    First_Name: "David",
    Last_Name: "Johnson",
    Address: "789 Pine Rd",
    City: "Pune",
    State: "MAHARASHTRA",
    Pincode: 576201,
    B_Date: ISODate("1982-06-18"),
    Status: "Divorcee"
  },
  // Add additional sample documents as needed
]);

Step 2: Queries

1. Display all documents where State is KARNATAKA

db.CUSTOMER.find({ State: "KARNATAKA" });

2. Delete the document where Pincode is 576201

db.CUSTOMER.deleteOne({ Pincode: 576201 });

3. Update Address and Pincode where Cust_No is 1003

db.CUSTOMER.updateOne(
  { Cust_No: 1003 },
  {
    $set: {
      Address: "PICT, Trimurti chowk, Dhankawadi",
      Pincode: 411041
    }
  }
);

4. Display the total number of Married, Unmarried, and Divorcee customers

db.CUSTOMER.aggregate([
  {
    $group: {
      _id: "$Status",
      TotalCount: { $sum: 1 }
    }
  }
]);

5. Sort and display customer data in alphabetical order of City

db.CUSTOMER.find().sort({ City: 1 });

6. Retrieve records of Karnataka or Kerala customers who are Married

db.CUSTOMER.find({
  State: { $in: ["KARNATAKA", "KERALA"] },
  Status: "Married"
});

Step 3: Index Operations

1. Create an Index on City

db.CUSTOMER.createIndex({ City: 1 });

2. Get the Indexes

db.CUSTOMER.getIndexes();

3. Drop the Index on City

db.CUSTOMER.dropIndex("City_1");

Step 4: MapReduce/Aggregation to Calculate Total Customers per City
Using aggregation for simplicity:

db.CUSTOMER.aggregate([
  {
    $group: {
      _id: "$City",
      TotalCustomers: { $sum: 1 }
    }
  }
]);